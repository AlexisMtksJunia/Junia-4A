name: PHP Files Workflow

on:
  push:
    branches:
      - develop

jobs:
  lint:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Lint PHP files
        run: find . -iname "*.php" -exec php -l {} \;

  build:
    runs-on: ubuntu-latest
    needs: lint  # S'assure que le job 'lint' a été exécuté avec succès avant de lancer 'build'

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Vérifier la présence du Dockerfile et de nginx.conf
        run: |
          if [ ! -f Dockerfile ]; then
            echo "Dockerfile not found!"
            exit 1
          fi
          if [ ! -f nginx.conf ]; then
            echo "nginx.conf not found!"
            exit 1
          fi
        shell: bash

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build Docker image
        run: |
        docker build -t my-docker-image:latest .
        docker images  # Vérifier la liste des images disponibles après la construction
      
      - name: Vérifier si l'image Docker est créée
        run: |
          if ! docker images my-docker-image:latest --format '{{.Repository}}:{{.Tag}}'; then
            echo "Image 'my-docker-image:latest' not found. Ensure that the build step completed successfully."
            exit 1
          fi

    

  push:
    runs-on: ubuntu-latest
    needs: build  # Ce job n'est exécuté que si 'build' a réussi

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Push Docker image
        run: |
          docker tag my-docker-image:latest your-dockerhub-username/my-docker-image:latest
          docker push your-dockerhub-username/my-docker-image:latest