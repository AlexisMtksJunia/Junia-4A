name: main PHP Files

# Le workflow s'exécute lorsqu'un push est effectué sur la branche "develop"
on:
  push:
    branches:
      - develop

jobs:
  lint:
    runs-on: self-hosted

    steps:
      # Etape 1 : Checker le code du dépôt, re-clonner le repository
      - name: Check du repository
        uses: actions/checkout@v3

      # Etape 2 : Trouver les fichiers PHP et executer "php -l" sur eux
      - name: Execution sur les fichiers PHP
        run: find . -iname "*.php" -exec php -l {} \;

  build:
    runs-on: ubuntu-latest
    needs: lint  # S'assure que le job 'lint' a été exécuté avec succès avant de lancer 'build'

    steps:
      - name: Check du repository
        uses: actions/checkout@v3

      - name: Vérifier la présence du Dockerfile
        run: |
          if [ ! -f Dockerfile ]; then
            echo "Dockerfile not found!"
            exit 1
          fi
        shell: bash

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build Docker image
        run: |
          docker build -t my-docker-image:latest .
          docker images  # Vérifier les images disponibles après la construction

      - name: Vérifier si l'image Docker est créée
        run: |
          if ! docker images my-docker-image:latest --format '{{.Repository}}:{{.Tag}}'; then
            echo "Image 'my-docker-image:latest' not found. Ensure that the build step completed successfully."
            exit 1
          fi
        shell: bash

  push:
    runs-on: ubuntu-latest
    needs: build  # Ce job n'est exécuté que si 'build' a réussi

    steps:
      - name: Check du repository
        uses: actions/checkout@v3

      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Tag and Push Docker image
        run: |
          docker tag my-docker-image:latest your-dockerhub-username/my-docker-image:latest
          docker push your-dockerhub-username/my-docker-image:latest